{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/home/nyambura00/Desktop/blockchain devt/NEAR-meetups/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/nyambura00/Desktop/blockchain devt/NEAR-meetups/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/home/nyambura00/Desktop/blockchain devt/NEAR-meetups/components/AppContext.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, createContext, useEffect } from 'react';\nimport { login, logout, initializeContract, accountBalance } from \"../utils/near\";\nimport environment from '../utils/config';\nvar AppContext = /*#__PURE__*/createContext(null);\nexport var AppProvider = function AppProvider(props) {\n  _s();\n\n  var _useState = useState({\n    accountId: undefined\n  }),\n      account = _useState[0],\n      setAccount = _useState[1];\n\n  var _useState2 = useState(\"testnet\"),\n      networkId = _useState2[0],\n      setNetworkId = _useState2[1];\n\n  var _useState3 = useState(),\n      config = _useState3[0],\n      setConfig = _useState3[1];\n\n  var _useState4 = useState({\n    tokenBalance: 0,\n    nearBalance: 0\n  }),\n      balance = _useState4[0],\n      setBalance = _useState4[1];\n\n  useEffect(function () {\n    function fetch() {\n      return _fetch.apply(this, arguments);\n    }\n\n    function _fetch() {\n      _fetch = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var acc;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return initializeContract();\n\n              case 2:\n                // @ts-ignore\n                acc = window.walletConnection.account();\n                setAccount(acc);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _fetch.apply(this, arguments);\n    }\n\n    fetch();\n  }, []);\n  useEffect(function () {\n    function fetch() {\n      return _fetch2.apply(this, arguments);\n    }\n\n    function _fetch2() {\n      _fetch2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var near;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!account.connection) {\n                  _context2.next = 8;\n                  break;\n                }\n\n                // @ts-ignore\n                setNetworkId(account.connection.networkId); // @ts-ignore\n\n                setConfig(environment(networkId));\n\n                if (!account.accountId) {\n                  _context2.next = 8;\n                  break;\n                }\n\n                _context2.next = 6;\n                return accountBalance();\n\n              case 6:\n                near = _context2.sent;\n                // @ts-ignore\n                setBalance({\n                  nearBalance: near\n                });\n\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n      return _fetch2.apply(this, arguments);\n    }\n\n    fetch();\n  }, [account]);\n  return (\n    /*#__PURE__*/\n    // @ts-ignore\n    _jsxDEV(AppContext.Provider, {\n      value: {\n        account: account,\n        config: config,\n        balance: balance,\n        login: login,\n        logout: logout\n      },\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }, _this)\n  );\n};\n\n_s(AppProvider, \"OcKdFFwb+1J4/917VsApMKoqh+4=\");\n\n_c = AppProvider;\nexport default AppContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"sources":["/home/nyambura00/Desktop/blockchain devt/NEAR-meetups/components/AppContext.tsx"],"names":["React","useState","createContext","useEffect","login","logout","initializeContract","accountBalance","environment","AppContext","AppProvider","props","accountId","undefined","account","setAccount","networkId","setNetworkId","config","setConfig","tokenBalance","nearBalance","balance","setBalance","fetch","acc","window","walletConnection","connection","near","children"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,aAA1B,EAAyCC,SAAzC,QAA0D,OAA1D;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,kBAAxB,EAA4CC,cAA5C,QAAkE,eAAlE;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AAIA,IAAMC,UAAU,gBAAGP,aAAa,CAAyB,IAAzB,CAAhC;AAEA,OAAO,IAAMQ,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAgB;AAAA;;AAAA,kBACXV,QAAQ,CAAC;AAAEW,IAAAA,SAAS,EAAEC;AAAb,GAAD,CADG;AAAA,MAClCC,OADkC;AAAA,MACzBC,UADyB;;AAAA,mBAEPd,QAAQ,WAFD;AAAA,MAElCe,SAFkC;AAAA,MAEvBC,YAFuB;;AAAA,mBAGbhB,QAAQ,EAHK;AAAA,MAGlCiB,MAHkC;AAAA,MAG1BC,SAH0B;;AAAA,mBAIXlB,QAAQ,CAAC;AAAEmB,IAAAA,YAAY,EAAE,CAAhB;AAAmBC,IAAAA,WAAW,EAAE;AAAhC,GAAD,CAJG;AAAA,MAIlCC,OAJkC;AAAA,MAIzBC,UAJyB;;AAMzCpB,EAAAA,SAAS,CAAC,YAAM;AAAA,aACCqB,KADD;AAAA;AAAA;;AAAA;AAAA,wEACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACQlB,kBAAkB,EAD1B;;AAAA;AAEE;AACMmB,gBAAAA,GAHR,GAGcC,MAAM,CAACC,gBAAP,CAAwBb,OAAxB,EAHd;AAIEC,gBAAAA,UAAU,CAACU,GAAD,CAAV;;AAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADc;AAAA;AAAA;;AAOdD,IAAAA,KAAK;AACN,GARQ,EAQN,EARM,CAAT;AAUArB,EAAAA,SAAS,CAAC,YAAM;AAAA,aACCqB,KADD;AAAA;AAAA;;AAAA;AAAA,yEACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEMV,OAAO,CAACc,UAFd;AAAA;AAAA;AAAA;;AAGI;AACAX,gBAAAA,YAAY,CAACH,OAAO,CAACc,UAAR,CAAmBZ,SAApB,CAAZ,CAJJ,CAKI;;AACAG,gBAAAA,SAAS,CAACX,WAAW,CAACQ,SAAD,CAAZ,CAAT;;AANJ,qBAOQF,OAAO,CAACF,SAPhB;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAQyBL,cAAc,EARvC;;AAAA;AAQYsB,gBAAAA,IARZ;AASM;AACAN,gBAAAA,UAAU,CAAC;AAAEF,kBAAAA,WAAW,EAAEQ;AAAf,iBAAD,CAAV;;AAVN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADc;AAAA;AAAA;;AAedL,IAAAA,KAAK;AACN,GAhBQ,EAgBN,CAACV,OAAD,CAhBM,CAAT;AAkBA;AAAA;AACE;AACA,YAAC,UAAD,CAAY,QAAZ;AACE,MAAA,KAAK,EAAE;AACLA,QAAAA,OAAO,EAAPA,OADK;AAELI,QAAAA,MAAM,EAANA,MAFK;AAGLI,QAAAA,OAAO,EAAPA,OAHK;AAILlB,QAAAA,KAAK,EAALA,KAJK;AAKLC,QAAAA,MAAM,EAANA;AALK,OADT;AAAA,gBASGM,KAAK,CAACmB;AATT;AAAA;AAAA;AAAA;AAAA;AAFF;AAcD,CAhDM;;GAAMpB,W;;KAAAA,W;AAkDb,eAAeD,UAAf","sourcesContent":["import React, { useState, createContext, useEffect } from 'react';\nimport { login, logout, initializeContract, accountBalance } from \"../utils/near\";\nimport environment from '../utils/config';\n\nimport MeetupContextType from '../components/';\n\nconst AppContext = createContext<MeetupContextType|null>(null);\n\nexport const AppProvider = (props: any) => {\n  const [account, setAccount] = useState({ accountId: undefined });\n  const [networkId, setNetworkId] = useState(`testnet`);\n  const [config, setConfig] = useState();\n  const [balance, setBalance] = useState({ tokenBalance: 0, nearBalance: 0 });\n\n  useEffect(() => {\n    async function fetch() {\n      await initializeContract();\n      // @ts-ignore\n      const acc = window.walletConnection.account();\n      setAccount(acc);\n    }\n    fetch();\n  }, []);\n\n  useEffect(() => {\n    async function fetch() {\n      // @ts-ignore\n      if (account.connection) {\n        // @ts-ignore\n        setNetworkId(account.connection.networkId);\n        // @ts-ignore\n        setConfig(environment(networkId));\n        if (account.accountId) {\n          const near = await accountBalance();\n          // @ts-ignore\n          setBalance({ nearBalance: near });\n        }\n      }\n    }\n    fetch();\n  }, [account]);\n\n  return (\n    // @ts-ignore\n    <AppContext.Provider\n      value={{\n        account,\n        config,\n        balance,\n        login,\n        logout,\n      }}\n    >\n      {props.children}\n    </AppContext.Provider>\n  );\n};\n\nexport default AppContext;\n"]},"metadata":{},"sourceType":"module"}