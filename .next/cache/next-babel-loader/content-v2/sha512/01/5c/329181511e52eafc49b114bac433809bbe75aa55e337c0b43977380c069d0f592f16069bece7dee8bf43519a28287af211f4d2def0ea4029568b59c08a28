{"ast":null,"code":"import _regeneratorRuntime from \"/home/nyambura00/Desktop/blockchain devt/NEAR-meetups/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/nyambura00/Desktop/blockchain devt/NEAR-meetups/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { keyStores, Near, WalletConnection, utils as nearUtils } from \"near-api-js\";\nexport var CONTRACT_ID = \"dev-1643583533233-86904103016460\";\nexport var initializeContract = function initializeContract() {\n  //Testnet config\n  var near = new Near({\n    networkId: \"testnet\",\n    keyStore: new keyStores.BrowserLocalStorageKeyStore(),\n    nodeUrl: \"https://rpc.testnet.near.org\",\n    walletUrl: \"https://wallet.testnet.near.org\"\n  }); //Wallet init\n\n  wallet = new WalletConnection(near, \"Near Dapp\");\n}; //Loaded after the being server to the client\n//Due to keystore needing access to the window object\n\nexport var wallet = null;\nexport var contract = null;\nexport var utils = nearUtils; //Methods\n\nexport var login = function login() {\n  wallet.requestSignIn(CONTRACT_ID);\n};\nexport var logout = function logout() {\n  wallet.signOut();\n}; //Function for view methods\n\nexport var viewFunction = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(functionName) {\n    var args,\n        result,\n        _args = arguments;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            args = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n            _context.next = 3;\n            return wallet.account().viewFunction(CONTRACT_ID, functionName, args);\n\n          case 3:\n            result = _context.sent;\n            return _context.abrupt(\"return\", result);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function viewFunction(_x) {\n    return _ref.apply(this, arguments);\n  };\n}(); //Function for call method\n\nexport var callFunction = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(functionName) {\n    var args,\n        deposit,\n        result,\n        _args2 = arguments;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            args = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : {};\n            deposit = _args2.length > 2 && _args2[2] !== undefined ? _args2[2] : \"0\";\n            _context2.next = 4;\n            return wallet.account().functionCall({\n              contractId: CONTRACT_ID,\n              methodName: functionName,\n              args: args,\n              attachedDeposit: utils.format.parseNearAmount(deposit)\n            });\n\n          case 4:\n            result = _context2.sent;\n            return _context2.abrupt(\"return\", result);\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function callFunction(_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}(); //for account balance\n\nexport function accountBalance() {\n  return _accountBalance.apply(this, arguments);\n}\n\nfunction _accountBalance() {\n  _accountBalance = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.t0 = formatNearAmount;\n            _context3.next = 3;\n            return window.walletConnection.account().getAccountBalance();\n\n          case 3:\n            _context3.t1 = _context3.sent.total;\n            return _context3.abrupt(\"return\", (0, _context3.t0)(_context3.t1, 2));\n\n          case 5:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _accountBalance.apply(this, arguments);\n}","map":{"version":3,"sources":["/home/nyambura00/Desktop/blockchain devt/NEAR-meetups/utils/near.js"],"names":["keyStores","Near","WalletConnection","utils","nearUtils","CONTRACT_ID","initializeContract","near","networkId","keyStore","BrowserLocalStorageKeyStore","nodeUrl","walletUrl","wallet","contract","login","requestSignIn","logout","signOut","viewFunction","functionName","args","account","result","callFunction","deposit","functionCall","contractId","methodName","attachedDeposit","format","parseNearAmount","accountBalance","formatNearAmount","window","walletConnection","getAccountBalance","total"],"mappings":";;AAAA,SACEA,SADF,EAEEC,IAFF,EAGEC,gBAHF,EAIEC,KAAK,IAAIC,SAJX,QAKO,aALP;AASA,OAAO,IAAMC,WAAW,GAAG,kCAApB;AAEP,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AACtC;AACA,MAAMC,IAAI,GAAG,IAAIN,IAAJ,CAAS;AACpBO,IAAAA,SAAS,EAAE,SADS;AAElBC,IAAAA,QAAQ,EAAE,IAAIT,SAAS,CAACU,2BAAd,EAFQ;AAGlBC,IAAAA,OAAO,EAAE,8BAHS;AAIpBC,IAAAA,SAAS,EAAE;AAJS,GAAT,CAAb,CAFsC,CAStC;;AACAC,EAAAA,MAAM,GAAG,IAAIX,gBAAJ,CAAqBK,IAArB,EAA2B,WAA3B,CAAT;AACD,CAXM,C,CAaP;AACA;;AACA,OAAO,IAAIM,MAAM,GAAG,IAAb;AACP,OAAO,IAAIC,QAAQ,GAAG,IAAf;AACP,OAAO,IAAMX,KAAK,GAAGC,SAAd,C,CAEP;;AAEA,OAAO,IAAMW,KAAK,GAAG,SAARA,KAAQ,GAAM;AACzBF,EAAAA,MAAM,CAACG,aAAP,CAAqBX,WAArB;AACD,CAFM;AAIP,OAAO,IAAMY,MAAM,GAAG,SAATA,MAAS,GAAM;AAC1BJ,EAAAA,MAAM,CAACK,OAAP;AACD,CAFM,C,CAKP;;AACA,OAAO,IAAMC,YAAY;AAAA,sEAAG,iBAAOC,YAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqBC,YAAAA,IAArB,2DAA4B,EAA5B;AAAA;AAAA,mBACLR,MAAM,CACxBS,OADkB,GAElBH,YAFkB,CAELd,WAFK,EAEQe,YAFR,EAEsBC,IAFtB,CADK;;AAAA;AACpBE,YAAAA,MADoB;AAAA,6CAKnBA,MALmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAZJ,YAAY;AAAA;AAAA;AAAA,GAAlB,C,CAQP;;AACA,OAAO,IAAMK,YAAY;AAAA,uEAAG,kBAAOJ,YAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqBC,YAAAA,IAArB,8DAA4B,EAA5B;AAAgCI,YAAAA,OAAhC,8DAA0C,GAA1C;AAAA;AAAA,mBACLZ,MAAM,CAACS,OAAP,GAAiBI,YAAjB,CAA8B;AACjDC,cAAAA,UAAU,EAAEtB,WADqC;AAEjDuB,cAAAA,UAAU,EAAER,YAFqC;AAGjDC,cAAAA,IAAI,EAAEA,IAH2C;AAIjDQ,cAAAA,eAAe,EAAE1B,KAAK,CAAC2B,MAAN,CAAaC,eAAb,CAA6BN,OAA7B;AAJgC,aAA9B,CADK;;AAAA;AACpBF,YAAAA,MADoB;AAAA,8CAOnBA,MAPmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAZC,YAAY;AAAA;AAAA;AAAA,GAAlB,C,CAUP;;AACA,gBAAsBQ,cAAtB;AAAA;AAAA;;;6EAAO;AAAA;AAAA;AAAA;AAAA;AAAA,2BACEC,gBADF;AAAA;AAAA,mBAC0BC,MAAM,CAACC,gBAAP,CAAwBb,OAAxB,GAAkCc,iBAAlC,EAD1B;;AAAA;AAAA,0CACiFC,KADjF;AAAA,8EACwF,CADxF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import {\n  keyStores,\n  Near,\n  WalletConnection,\n  utils as nearUtils,\n} from \"near-api-js\";\n\n\n\nexport const CONTRACT_ID = \"dev-1643583533233-86904103016460\";\n\nexport const initializeContract = () => {\n  //Testnet config\n  const near = new Near({\n    networkId: \"testnet\",\n      keyStore: new keyStores.BrowserLocalStorageKeyStore(),\n      nodeUrl: \"https://rpc.testnet.near.org\",\n    walletUrl: \"https://wallet.testnet.near.org\",\n  });\n\n  //Wallet init\n  wallet = new WalletConnection(near, \"Near Dapp\");\n};\n\n//Loaded after the being server to the client\n//Due to keystore needing access to the window object\nexport let wallet = null;\nexport let contract = null;\nexport const utils = nearUtils;\n\n//Methods\n\nexport const login = () => {\n  wallet.requestSignIn(CONTRACT_ID);\n};\n\nexport const logout = () => {\n  wallet.signOut();\n};\n\n\n//Function for view methods\nexport const viewFunction = async (functionName, args = {}) => {\n  const result = await wallet\n    .account()\n    .viewFunction(CONTRACT_ID, functionName, args);\n\n  return result;\n};\n\n//Function for call method\nexport const callFunction = async (functionName, args = {}, deposit = \"0\") => {\n  const result = await wallet.account().functionCall({\n    contractId: CONTRACT_ID,\n    methodName: functionName,\n    args: args,\n    attachedDeposit: utils.format.parseNearAmount(deposit),\n  });\n  return result;\n}\n\n//for account balance\nexport async function accountBalance() {\n  return formatNearAmount((await window.walletConnection.account().getAccountBalance()).total, 2);\n}"]},"metadata":{},"sourceType":"module"}