{"ast":null,"code":"import { keyStores, Near, WalletConnection, utils as nearUtils } from \"near-api-js\";\nexport const CONTRACT_ID = \"dev-1648751639070-78408703513675\";\nexport const initializeContract = () => {\n  //Testnet config\n  const near = new Near({\n    networkId: \"testnet\",\n    keyStore: new keyStores.BrowserLocalStorageKeyStore(),\n    nodeUrl: \"https://rpc.testnet.near.org\",\n    walletUrl: \"https://wallet.testnet.near.org\"\n  }); //Wallet init\n\n  wallet = new WalletConnection(near, \"NEAR-meetups\");\n}; //Loaded after the being server to the client\n//Due to keystore needing access to the window object\n\nexport let wallet = null;\nexport let contract = null;\nexport const utils = nearUtils; //Methods\n\nexport const login = () => {\n  wallet.requestSignIn(CONTRACT_ID);\n};\nexport const logout = () => {\n  wallet.signOut();\n}; //Function for view methods\n\nexport const viewFunction = async (functionName, args = {}) => {\n  const result = await wallet.account().viewFunction(CONTRACT_ID, functionName, args);\n  return result;\n}; //Function for call method\n\nexport const callFunction = async (functionName, args = {}, deposit = \"0\") => {\n  const result = await wallet.account().functionCall({\n    contractId: CONTRACT_ID,\n    methodName: functionName,\n    args: args,\n    attachedDeposit: utils.format.parseNearAmount(deposit)\n  });\n  return result;\n}; //for account balance\n\nexport async function accountBalance() {\n  return formatNearAmount((await window.walletConnection.account().getAccountBalance()).total, 2);\n}","map":{"version":3,"sources":["/home/nyambura00/Desktop/blockchain devt/NEAR-meetups/utils/near.js"],"names":["keyStores","Near","WalletConnection","utils","nearUtils","CONTRACT_ID","initializeContract","near","networkId","keyStore","BrowserLocalStorageKeyStore","nodeUrl","walletUrl","wallet","contract","login","requestSignIn","logout","signOut","viewFunction","functionName","args","result","account","callFunction","deposit","functionCall","contractId","methodName","attachedDeposit","format","parseNearAmount","accountBalance","formatNearAmount","window","walletConnection","getAccountBalance","total"],"mappings":"AAAA,SACEA,SADF,EAEEC,IAFF,EAGEC,gBAHF,EAIEC,KAAK,IAAIC,SAJX,QAKO,aALP;AASA,OAAO,MAAMC,WAAW,GAAG,kCAApB;AAEP,OAAO,MAAMC,kBAAkB,GAAG,MAAM;AACtC;AACA,QAAMC,IAAI,GAAG,IAAIN,IAAJ,CAAS;AACpBO,IAAAA,SAAS,EAAE,SADS;AAElBC,IAAAA,QAAQ,EAAE,IAAIT,SAAS,CAACU,2BAAd,EAFQ;AAGlBC,IAAAA,OAAO,EAAE,8BAHS;AAIpBC,IAAAA,SAAS,EAAE;AAJS,GAAT,CAAb,CAFsC,CAStC;;AACAC,EAAAA,MAAM,GAAG,IAAIX,gBAAJ,CAAqBK,IAArB,EAA2B,cAA3B,CAAT;AACD,CAXM,C,CAaP;AACA;;AACA,OAAO,IAAIM,MAAM,GAAG,IAAb;AACP,OAAO,IAAIC,QAAQ,GAAG,IAAf;AACP,OAAO,MAAMX,KAAK,GAAGC,SAAd,C,CAEP;;AAEA,OAAO,MAAMW,KAAK,GAAG,MAAM;AACzBF,EAAAA,MAAM,CAACG,aAAP,CAAqBX,WAArB;AACD,CAFM;AAIP,OAAO,MAAMY,MAAM,GAAG,MAAM;AAC1BJ,EAAAA,MAAM,CAACK,OAAP;AACD,CAFM,C,CAKP;;AACA,OAAO,MAAMC,YAAY,GAAG,OAAOC,YAAP,EAAqBC,IAAI,GAAG,EAA5B,KAAmC;AAC7D,QAAMC,MAAM,GAAG,MAAMT,MAAM,CACxBU,OADkB,GAElBJ,YAFkB,CAELd,WAFK,EAEQe,YAFR,EAEsBC,IAFtB,CAArB;AAIA,SAAOC,MAAP;AACD,CANM,C,CAQP;;AACA,OAAO,MAAME,YAAY,GAAG,OAAOJ,YAAP,EAAqBC,IAAI,GAAG,EAA5B,EAAgCI,OAAO,GAAG,GAA1C,KAAkD;AAC5E,QAAMH,MAAM,GAAG,MAAMT,MAAM,CAACU,OAAP,GAAiBG,YAAjB,CAA8B;AACjDC,IAAAA,UAAU,EAAEtB,WADqC;AAEjDuB,IAAAA,UAAU,EAAER,YAFqC;AAGjDC,IAAAA,IAAI,EAAEA,IAH2C;AAIjDQ,IAAAA,eAAe,EAAE1B,KAAK,CAAC2B,MAAN,CAAaC,eAAb,CAA6BN,OAA7B;AAJgC,GAA9B,CAArB;AAMA,SAAOH,MAAP;AACD,CARM,C,CAUP;;AACA,OAAO,eAAeU,cAAf,GAAgC;AACrC,SAAOC,gBAAgB,CAAC,CAAC,MAAMC,MAAM,CAACC,gBAAP,CAAwBZ,OAAxB,GAAkCa,iBAAlC,EAAP,EAA8DC,KAA/D,EAAsE,CAAtE,CAAvB;AACD","sourcesContent":["import {\n  keyStores,\n  Near,\n  WalletConnection,\n  utils as nearUtils,\n} from \"near-api-js\";\n\n\n\nexport const CONTRACT_ID = \"dev-1648751639070-78408703513675\";\n\nexport const initializeContract = () => {\n  //Testnet config\n  const near = new Near({\n    networkId: \"testnet\",\n      keyStore: new keyStores.BrowserLocalStorageKeyStore(),\n      nodeUrl: \"https://rpc.testnet.near.org\",\n    walletUrl: \"https://wallet.testnet.near.org\",\n  });\n\n  //Wallet init\n  wallet = new WalletConnection(near, \"NEAR-meetups\");\n};\n\n//Loaded after the being server to the client\n//Due to keystore needing access to the window object\nexport let wallet = null;\nexport let contract = null;\nexport const utils = nearUtils;\n\n//Methods\n\nexport const login = () => {\n  wallet.requestSignIn(CONTRACT_ID);\n};\n\nexport const logout = () => {\n  wallet.signOut();\n};\n\n\n//Function for view methods\nexport const viewFunction = async (functionName, args = {}) => {\n  const result = await wallet\n    .account()\n    .viewFunction(CONTRACT_ID, functionName, args);\n\n  return result;\n};\n\n//Function for call method\nexport const callFunction = async (functionName, args = {}, deposit = \"0\") => {\n  const result = await wallet.account().functionCall({\n    contractId: CONTRACT_ID,\n    methodName: functionName,\n    args: args,\n    attachedDeposit: utils.format.parseNearAmount(deposit),\n  });\n  return result;\n}\n\n//for account balance\nexport async function accountBalance() {\n  return formatNearAmount((await window.walletConnection.account().getAccountBalance()).total, 2);\n}"]},"metadata":{},"sourceType":"module"}