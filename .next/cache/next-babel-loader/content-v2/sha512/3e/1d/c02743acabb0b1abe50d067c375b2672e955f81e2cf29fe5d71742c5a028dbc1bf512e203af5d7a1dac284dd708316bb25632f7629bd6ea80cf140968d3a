{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { connect, Contract, keyStores, WalletConnection } from 'near-api-js';\nimport { formatNearAmount } from 'near-api-js/lib/utils/format';\nimport environment from './config';\nconst nearEnv = environment('testnet');\nexport async function initializeContract() {\n  const near = await connect(_objectSpread({\n    deps: {\n      keyStore: new keyStores.BrowserLocalStorageKeyStore()\n    }\n  }, nearEnv));\n  window.walletConnection = new WalletConnection(near);\n  window.accountId = window.walletConnection.getAccountId();\n  window.contract = new Contract(window.walletConnection.account(), nearEnv.contractName, {\n    viewMethods: ['getEvent', 'getEvents'],\n    changeMethods: ['addEvent']\n  }); // Needed to access wallet\n\n  const walletConnection = new nearAPI.WalletConnection(near); // Load in account data\n\n  let currentUser;\n\n  if (walletConnection.getAccountId()) {\n    currentUser = {\n      accountId: walletConnection.getAccountId(),\n      balance: (await walletConnection.account().state()).amount\n    };\n  }\n\n  return {\n    contract,\n    currentUser,\n    nearConfig,\n    walletConnection\n  };\n}\nexport async function accountBalance() {\n  return formatNearAmount((await window.walletConnection.account().getAccountBalance()).total, 2);\n}\nexport async function getAccountId() {\n  return window.walletConnection.getAccountId();\n}\nexport function login() {\n  window.walletConnection.requestSignIn(nearEnv.contractName);\n}\nexport function logout() {\n  window.walletConnection.signOut();\n  window.location.reload();\n}","map":{"version":3,"sources":["/home/nyambura00/Desktop/blockchain devt/NEAR-meetups/utils/near.js"],"names":["connect","Contract","keyStores","WalletConnection","formatNearAmount","environment","nearEnv","initializeContract","near","deps","keyStore","BrowserLocalStorageKeyStore","window","walletConnection","accountId","getAccountId","contract","account","contractName","viewMethods","changeMethods","nearAPI","currentUser","balance","state","amount","nearConfig","accountBalance","getAccountBalance","total","login","requestSignIn","logout","signOut","location","reload"],"mappings":";;;;;;AAAA,SAASA,OAAT,EAAkBC,QAAlB,EAA4BC,SAA5B,EAAuCC,gBAAvC,QAA+D,aAA/D;AACA,SAASC,gBAAT,QAAiC,8BAAjC;AACA,OAAOC,WAAP,MAAwB,UAAxB;AAEA,MAAMC,OAAO,GAAGD,WAAW,CAAC,SAAD,CAA3B;AAEA,OAAO,eAAeE,kBAAf,GAAoC;AACzC,QAAMC,IAAI,GAAG,MAAMR,OAAO;AAAGS,IAAAA,IAAI,EAAE;AAAEC,MAAAA,QAAQ,EAAE,IAAIR,SAAS,CAACS,2BAAd;AAAZ;AAAT,KAAuEL,OAAvE,EAA1B;AACAM,EAAAA,MAAM,CAACC,gBAAP,GAA0B,IAAIV,gBAAJ,CAAqBK,IAArB,CAA1B;AACAI,EAAAA,MAAM,CAACE,SAAP,GAAmBF,MAAM,CAACC,gBAAP,CAAwBE,YAAxB,EAAnB;AACAH,EAAAA,MAAM,CAACI,QAAP,GAAkB,IAAIf,QAAJ,CAAaW,MAAM,CAACC,gBAAP,CAAwBI,OAAxB,EAAb,EAAgDX,OAAO,CAACY,YAAxD,EAAsE;AACtFC,IAAAA,WAAW,EAAE,CAAC,UAAD,EAAa,WAAb,CADyE;AAEtFC,IAAAA,aAAa,EAAE,CAAC,UAAD;AAFuE,GAAtE,CAAlB,CAJyC,CASzC;;AACA,QAAMP,gBAAgB,GAAG,IAAIQ,OAAO,CAAClB,gBAAZ,CAA6BK,IAA7B,CAAzB,CAVyC,CAYzC;;AACA,MAAIc,WAAJ;;AACA,MAAGT,gBAAgB,CAACE,YAAjB,EAAH,EAAoC;AAClCO,IAAAA,WAAW,GAAG;AACZR,MAAAA,SAAS,EAAED,gBAAgB,CAACE,YAAjB,EADC;AAEZQ,MAAAA,OAAO,EAAE,CAAC,MAAMV,gBAAgB,CAACI,OAAjB,GAA2BO,KAA3B,EAAP,EAA2CC;AAFxC,KAAd;AAID;;AAED,SAAO;AAAET,IAAAA,QAAF;AAAYM,IAAAA,WAAZ;AAAyBI,IAAAA,UAAzB;AAAqCb,IAAAA;AAArC,GAAP;AACD;AAED,OAAO,eAAec,cAAf,GAAgC;AACrC,SAAOvB,gBAAgB,CAAC,CAAC,MAAMQ,MAAM,CAACC,gBAAP,CAAwBI,OAAxB,GAAkCW,iBAAlC,EAAP,EAA8DC,KAA/D,EAAsE,CAAtE,CAAvB;AACD;AAED,OAAO,eAAed,YAAf,GAA8B;AACnC,SAAOH,MAAM,CAACC,gBAAP,CAAwBE,YAAxB,EAAP;AACD;AAED,OAAO,SAASe,KAAT,GAAiB;AACtBlB,EAAAA,MAAM,CAACC,gBAAP,CAAwBkB,aAAxB,CAAsCzB,OAAO,CAACY,YAA9C;AACD;AAED,OAAO,SAASc,MAAT,GAAkB;AACvBpB,EAAAA,MAAM,CAACC,gBAAP,CAAwBoB,OAAxB;AACArB,EAAAA,MAAM,CAACsB,QAAP,CAAgBC,MAAhB;AACD","sourcesContent":["import { connect, Contract, keyStores, WalletConnection } from 'near-api-js';\nimport { formatNearAmount } from 'near-api-js/lib/utils/format';\nimport environment from './config';\n\nconst nearEnv = environment('testnet');\n\nexport async function initializeContract() {\n  const near = await connect({ deps: { keyStore: new keyStores.BrowserLocalStorageKeyStore() }, ...nearEnv });\n  window.walletConnection = new WalletConnection(near);\n  window.accountId = window.walletConnection.getAccountId();\n  window.contract = new Contract(window.walletConnection.account(), nearEnv.contractName, {\n    viewMethods: ['getEvent', 'getEvents'],\n    changeMethods: ['addEvent'],\n  });\n\n  // Needed to access wallet\n  const walletConnection = new nearAPI.WalletConnection(near);\n\n  // Load in account data\n  let currentUser;\n  if(walletConnection.getAccountId()) {\n    currentUser = {\n      accountId: walletConnection.getAccountId(),\n      balance: (await walletConnection.account().state()).amount\n    };\n  }\n\n  return { contract, currentUser, nearConfig, walletConnection };\n}\n\nexport async function accountBalance() {\n  return formatNearAmount((await window.walletConnection.account().getAccountBalance()).total, 2);\n}\n\nexport async function getAccountId() {\n  return window.walletConnection.getAccountId();\n}\n\nexport function login() {\n  window.walletConnection.requestSignIn(nearEnv.contractName);\n}\n\nexport function logout() {\n  window.walletConnection.signOut();\n  window.location.reload();\n}\n"]},"metadata":{},"sourceType":"module"}