{"ast":null,"code":"import _regeneratorRuntime from \"/home/nyambura00/Desktop/blockchain devt/NEAR-meetups/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _defineProperty from \"/home/nyambura00/Desktop/blockchain devt/NEAR-meetups/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"/home/nyambura00/Desktop/blockchain devt/NEAR-meetups/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { connect, Contract, keyStores, WalletConnection } from 'near-api-js';\nimport { formatNearAmount } from 'near-api-js/lib/utils/format';\nimport environment from './config';\nvar nearEnv = environment('testnet');\nexport function initializeContract() {\n  return _initializeContract.apply(this, arguments);\n}\n\nfunction _initializeContract() {\n  _initializeContract = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var near, walletConnection, currentUser;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return connect(_objectSpread({\n              deps: {\n                keyStore: new keyStores.BrowserLocalStorageKeyStore()\n              }\n            }, nearEnv));\n\n          case 2:\n            near = _context.sent;\n            window.walletConnection = new WalletConnection(near);\n            window.accountId = window.walletConnection.getAccountId();\n            window.contract = new Contract(window.walletConnection.account(), nearEnv.contractName, {\n              viewMethods: ['getEvent', 'getEvents'],\n              changeMethods: ['addEvent']\n            }); // Needed to access wallet\n\n            walletConnection = new nearAPI.WalletConnection(near); // Load in account data\n\n            if (!walletConnection.getAccountId()) {\n              _context.next = 13;\n              break;\n            }\n\n            _context.t0 = walletConnection.getAccountId();\n            _context.next = 11;\n            return walletConnection.account().state();\n\n          case 11:\n            _context.t1 = _context.sent.amount;\n            currentUser = {\n              accountId: _context.t0,\n              balance: _context.t1\n            };\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _initializeContract.apply(this, arguments);\n}\n\nexport function accountBalance() {\n  return _accountBalance.apply(this, arguments);\n}\n\nfunction _accountBalance() {\n  _accountBalance = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.t0 = formatNearAmount;\n            _context2.next = 3;\n            return window.walletConnection.account().getAccountBalance();\n\n          case 3:\n            _context2.t1 = _context2.sent.total;\n            return _context2.abrupt(\"return\", (0, _context2.t0)(_context2.t1, 2));\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _accountBalance.apply(this, arguments);\n}\n\nexport function getAccountId() {\n  return _getAccountId.apply(this, arguments);\n}\n\nfunction _getAccountId() {\n  _getAccountId = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            return _context3.abrupt(\"return\", window.walletConnection.getAccountId());\n\n          case 1:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _getAccountId.apply(this, arguments);\n}\n\nexport function login() {\n  window.walletConnection.requestSignIn(nearEnv.contractName);\n}\nexport function logout() {\n  window.walletConnection.signOut();\n  window.location.reload();\n}","map":{"version":3,"sources":["/home/nyambura00/Desktop/blockchain devt/NEAR-meetups/utils/near.js"],"names":["connect","Contract","keyStores","WalletConnection","formatNearAmount","environment","nearEnv","initializeContract","deps","keyStore","BrowserLocalStorageKeyStore","near","window","walletConnection","accountId","getAccountId","contract","account","contractName","viewMethods","changeMethods","nearAPI","state","amount","currentUser","balance","accountBalance","getAccountBalance","total","login","requestSignIn","logout","signOut","location","reload"],"mappings":";;;;;;;;AAAA,SAASA,OAAT,EAAkBC,QAAlB,EAA4BC,SAA5B,EAAuCC,gBAAvC,QAA+D,aAA/D;AACA,SAASC,gBAAT,QAAiC,8BAAjC;AACA,OAAOC,WAAP,MAAwB,UAAxB;AAEA,IAAMC,OAAO,GAAGD,WAAW,CAAC,SAAD,CAA3B;AAEA,gBAAsBE,kBAAtB;AAAA;AAAA;;;iFAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACcP,OAAO;AAAGQ,cAAAA,IAAI,EAAE;AAAEC,gBAAAA,QAAQ,EAAE,IAAIP,SAAS,CAACQ,2BAAd;AAAZ;AAAT,eAAuEJ,OAAvE,EADrB;;AAAA;AACCK,YAAAA,IADD;AAELC,YAAAA,MAAM,CAACC,gBAAP,GAA0B,IAAIV,gBAAJ,CAAqBQ,IAArB,CAA1B;AACAC,YAAAA,MAAM,CAACE,SAAP,GAAmBF,MAAM,CAACC,gBAAP,CAAwBE,YAAxB,EAAnB;AACAH,YAAAA,MAAM,CAACI,QAAP,GAAkB,IAAIf,QAAJ,CAAaW,MAAM,CAACC,gBAAP,CAAwBI,OAAxB,EAAb,EAAgDX,OAAO,CAACY,YAAxD,EAAsE;AACtFC,cAAAA,WAAW,EAAE,CAAC,UAAD,EAAa,WAAb,CADyE;AAEtFC,cAAAA,aAAa,EAAE,CAAC,UAAD;AAFuE,aAAtE,CAAlB,CAJK,CASL;;AACMP,YAAAA,gBAVD,GAUoB,IAAIQ,OAAO,CAAClB,gBAAZ,CAA6BQ,IAA7B,CAVpB,EAYL;;AAZK,iBAcFE,gBAAgB,CAACE,YAAjB,EAdE;AAAA;AAAA;AAAA;;AAAA,0BAgBUF,gBAAgB,CAACE,YAAjB,EAhBV;AAAA;AAAA,mBAiBeF,gBAAgB,CAACI,OAAjB,GAA2BK,KAA3B,EAjBf;;AAAA;AAAA,wCAiBmDC,MAjBnD;AAeHC,YAAAA,WAfG;AAgBDV,cAAAA,SAhBC;AAiBDW,cAAAA,OAjBC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAsBP,gBAAsBC,cAAtB;AAAA;AAAA;;;6EAAO;AAAA;AAAA;AAAA;AAAA;AAAA,2BACEtB,gBADF;AAAA;AAAA,mBAC0BQ,MAAM,CAACC,gBAAP,CAAwBI,OAAxB,GAAkCU,iBAAlC,EAD1B;;AAAA;AAAA,0CACiFC,KADjF;AAAA,8EACwF,CADxF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAIP,gBAAsBb,YAAtB;AAAA;AAAA;;;2EAAO;AAAA;AAAA;AAAA;AAAA;AAAA,8CACEH,MAAM,CAACC,gBAAP,CAAwBE,YAAxB,EADF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAIP,OAAO,SAASc,KAAT,GAAiB;AACtBjB,EAAAA,MAAM,CAACC,gBAAP,CAAwBiB,aAAxB,CAAsCxB,OAAO,CAACY,YAA9C;AACD;AAED,OAAO,SAASa,MAAT,GAAkB;AACvBnB,EAAAA,MAAM,CAACC,gBAAP,CAAwBmB,OAAxB;AACApB,EAAAA,MAAM,CAACqB,QAAP,CAAgBC,MAAhB;AACD","sourcesContent":["import { connect, Contract, keyStores, WalletConnection } from 'near-api-js';\nimport { formatNearAmount } from 'near-api-js/lib/utils/format';\nimport environment from './config';\n\nconst nearEnv = environment('testnet');\n\nexport async function initializeContract() {\n  const near = await connect({ deps: { keyStore: new keyStores.BrowserLocalStorageKeyStore() }, ...nearEnv });\n  window.walletConnection = new WalletConnection(near);\n  window.accountId = window.walletConnection.getAccountId();\n  window.contract = new Contract(window.walletConnection.account(), nearEnv.contractName, {\n    viewMethods: ['getEvent', 'getEvents'],\n    changeMethods: ['addEvent'],\n  });\n\n  // Needed to access wallet\n  const walletConnection = new nearAPI.WalletConnection(near);\n\n  // Load in account data\n  let currentUser;\n  if(walletConnection.getAccountId()) {\n    currentUser = {\n      accountId: walletConnection.getAccountId(),\n      balance: (await walletConnection.account().state()).amount\n    };\n  }\n}\n\nexport async function accountBalance() {\n  return formatNearAmount((await window.walletConnection.account().getAccountBalance()).total, 2);\n}\n\nexport async function getAccountId() {\n  return window.walletConnection.getAccountId();\n}\n\nexport function login() {\n  window.walletConnection.requestSignIn(nearEnv.contractName);\n}\n\nexport function logout() {\n  window.walletConnection.signOut();\n  window.location.reload();\n}\n"]},"metadata":{},"sourceType":"module"}